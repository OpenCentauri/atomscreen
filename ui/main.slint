import { ProgressIndicator, Button, StyleMetrics, Palette, ScrollView } from "std-widgets.slint";
//import { VirtualKeyboard } from "virtual_keyboard.slint";
import "../Figtree-Regular.ttf";


export struct TemperatureSensor
{
    name: string,
    temperature: int,
}

export struct Heater 
{
    temperature: int,
    target: int,
}

export global State 
{
    in-out property<[TemperatureSensor]> temperature_sensors;
    in-out property<Heater> extruder;
    in-out property<Heater> heated_bed;
} 

component Page inherits Rectangle {
    in property <string> header <=> h.text;
    width: 100%; 
    height: 100%;

    VerticalLayout {
        width: 100%;
        height: 100%;
        HorizontalLayout { 
            x: 10px;
            h := Text {
                font-weight: 900;
                horizontal-alignment: left;
                y: 10px;
            }
            padding-bottom: 20px;
            vertical-stretch: 0;
        }

        Rectangle {
            vertical-stretch: 1;
            @children
        }
    }
}

component PageOne inherits Page {
    header: "This is page 1";

    Rectangle {

        //Text { text: "This is page 2"; }
        ProgressIndicator {
            indeterminate: true;
            width: 200px;
        }
    }
}

component PageTwo inherits Page {
    header: "This is page 2";

    VerticalLayout {
        Text {
            text: "Hello!";
        }
        Rectangle {
            background: #ff0000;
        }
        Rectangle {
            background: #00ff00;
        }
        Rectangle {
            background: #0000ff;
        }
    }
}

component PageThree inherits Page {
    header: "This is page 3";

    ScrollView {
        VerticalLayout {
            for t in [ "Hello", "World", "!", "!", "!", "!", "!", "!", "hello atom", ":)", "why", "does", "this", "have", "to", "be", "so", "long?", "a", "b", "c" ] : Text {
                text: t;
            }
            Rectangle {
                background: #ff0000;
                height: 100px;
            }
            Rectangle {
                background: #00ff00;
                height: 100px;
            }
            Rectangle {
                background: #0000ff;
                height: 100px;
            }
        }
    }

}

component IconButton inherits Rectangle {
    in property <image> icon <=> img.source;
    in property <bool> checked: false;
    in property <bool> left-side: true;
    in property <brush> foreground: checked ? Palette.accent-foreground : Palette.foreground;

    callback clicked();

    background: checked ? Palette.accent-background : Palette.background;
    border-top-left-radius: left-side ? StyleMetrics.layout-padding : 0;
    border-bottom-left-radius: left-side ? StyleMetrics.layout-padding : 0;
    border-top-right-radius: left-side ? 0 : StyleMetrics.layout-padding;
    border-bottom-right-radius: left-side ? 0 : StyleMetrics.layout-padding;

    img := Image {
        horizontal-alignment: center;
        vertical-alignment: center;
        colorize: foreground;
    }

    TouchArea {
        clicked => { root.clicked(); }
    }
}

component TopBar inherits Rectangle {
    height: 20px;
    width: 100%;
    background: Palette.alternate-background;

    HorizontalLayout {
        padding-top: 2px;
        padding-left: 10px;
        padding-right: 10px;
        spacing: 10px;
        Text {
            text: "Printer: Idle";
            color: Palette.alternate-foreground;
            font-weight: 900;
            horizontal-stretch: 0;
        }

        Rectangle {
            horizontal-stretch: 1;
        }

        HorizontalLayout {
            Image {
                source: @image-url("assets/extruder.svg");
                colorize: Palette.alternate-foreground;
            }
            Text {
                text: State.extruder.temperature + "°C";
                color: Palette.alternate-foreground;
                font-weight: 900;
            }
        }
        
        HorizontalLayout {
            Image {
                source: @image-url("assets/bed.svg");
                colorize: Palette.alternate-foreground;
            }
            Text {
                text: "20°C";
                color: Palette.alternate-foreground;
                font-weight: 900;
            }
        }

    }
}


export struct MoonrakerFileTest
{
    path: string,
    modified: float,
    size: int,
    permissions: string,
    thumbnail: image,
}

export global AppState
{
    in-out property <bool> moonraker_connected: false;
}

export global Filesystem 
{
    callback list_files();
    callback download_thumbnail(index : int);
    in-out property <[MoonrakerFileTest]> files: [{
        path: "example.gcode", modified: 123456.0, size: 12345, permissions: "rw-r--r--",
    }, {
        path: "a-really-really-really-really-really-really-really-really-really-long-name.gcode", modified: 123456.0, size: 12345, permissions: "rw-r--r--"
    }];
    in-out property <bool> loading: false;
}

export global Utils
{
    pure callback image_exists(image: image) -> bool;  
    pure callback format_bytes(size: int) -> string;
}

component FileListView inherits Rectangle 
{
    property <MoonrakerFileTest> selected_file;
    property <int> thumbnail_index: 0;

    init() => {
        Filesystem.list_files();
    }

    if Filesystem.loading: ProgressIndicator {
        indeterminate: true;
        width: 200px;
    }

    if !Filesystem.loading && selected_file.path == "": ScrollView {
        VerticalLayout {
            for f in Filesystem.files: VerticalLayout {
                height: 40px;
                width: 100%;
                Rectangle {
                    TouchArea {
                        clicked => { root.selected_file = f; }
                    }
                    HorizontalLayout {
                        spacing: 10px;
                        padding: 5px;
                        Image {
                            source: Utils.image_exists(f.thumbnail) ? f.thumbnail : @image-url("assets/file.svg");
                            colorize: Utils.image_exists(f.thumbnail) ? transparent : Palette.foreground;
                            vertical-alignment: center;
                            horizontal-alignment: center;
                            width: 32px;
                        }
                        Text { text: f.path; horizontal-stretch: 1; vertical-alignment: center; overflow: elide; }
                        Text { text: Utils.format_bytes(f.size); horizontal-alignment: right; vertical-alignment: center; }
                    }
                }
                Rectangle { height: 1px; background: Palette.border; horizontal-stretch: 1; width: 100%; }
            }
        }
    }

    if selected_file.path != "": Rectangle {
        height: 100%;
        width: 100%;

        VerticalLayout {
            Text { text: "File: " + selected_file.path; font-weight: 900; overflow: elide; }
            Text { text: "Size: " + Utils.format_bytes(selected_file.size); }
            Text { text: "Modified: " + selected_file.modified; }
            Text { text: "Permissions: " + selected_file.permissions; }
            Button { text: "Close"; clicked => { root.selected_file = {}; Filesystem.download_thumbnail(thumbnail_index); thumbnail_index += 1; } }
        }
    }
}

component PageFour inherits Page {
    header: "Files";

    FileListView {
        width: 100%;
        height: 100%;
    }
}

component BottomBar inherits Rectangle {
    height: 20px;
    width: 100%;
    background: Palette.alternate-background;

    HorizontalLayout {
        Text {
            text: "Elegoo is pirating Klipper. Release the source code! https://freethecode.lol/";
            horizontal-alignment: center;
            vertical-alignment: center;
            color: Palette.alternate-foreground;
        }
    }
}

component MainView
{
    in-out property <int> current-page: 0;

    VerticalLayout { 
        TopBar {

        }

        HorizontalLayout {
            VerticalLayout {
                spacing: 5px;
                horizontal-stretch: 0;
                min-width: 50px;
                IconButton { icon: @image-url("assets/print.svg"); checked: root.current-page == 0; clicked => { root.current-page = 0; } }
                IconButton { icon: @image-url("assets/temperature.svg"); checked: root.current-page == 1; clicked => { root.current-page = 1; } }
                IconButton { icon: @image-url("assets/move.svg"); checked: root.current-page == 2; clicked => { root.current-page = 2; } }
                IconButton { icon: @image-url("assets/emergency.svg"); checked: root.current-page == 3; clicked => { root.current-page = 3;  } foreground: red; }
            }

            Rectangle { 
                horizontal-stretch: 1;

                //PageOne { visible: root.current-page == 0;  }
                PageTwo { visible: root.current-page == 1;  }
                PageThree { visible: root.current-page == 2;  }
                if root.current-page == 0: PageFour { }
            }

            VerticalLayout {
                spacing: 5px;
                horizontal-stretch: 0;
                min-width: 50px;
                IconButton { icon: @image-url("assets/fan.svg"); checked: root.current-page == 4; clicked => { root.current-page = 4; } left-side: false; }
                IconButton { icon: @image-url("assets/quickaction.svg"); checked: root.current-page == 5; clicked => { root.current-page = 5; } left-side: false; }
                IconButton { icon: @image-url("assets/console.svg"); checked: root.current-page == 6; clicked => { root.current-page = 6; } left-side: false; }
                IconButton { icon: @image-url("assets/settings.svg"); checked: root.current-page == 7; clicked => { root.current-page = 7; } left-side: false; }
            }
        }

        BottomBar {

        }
    }
}

export component AppWindow inherits Window {
    

    width: 480px;
    height: 272px;

    // The buttons to switch pages

    default-font-family: "Figtree";

    if AppState.moonraker_connected: MainView {
        width: 100%;
        height: 100%;
    }

    if !AppState.moonraker_connected: VerticalLayout
    {
        VerticalLayout {
            width: 100%;
            spacing: 20px;
            Rectangle {

            }
            Rectangle {
                VerticalLayout { 
                    width: 200px;
                    spacing: 20px;
                    alignment: center;
                    Text {
                        text: "Connecting to moonraker...";
                        horizontal-alignment: center;
                    }
                    ProgressIndicator {
                        width: 100%;
                        indeterminate: true;
                    }
                } 
            }
            Rectangle {

            }
        }
    }

/*
    keyboard := VirtualKeyboard {
        y: parent.height - self.height;
    }
*/
    /*
    VerticalLayout {
        HorizontalLayout {
            Button { text: "Page 1"; clicked => { root.current-page = 0; } checked: root.current-page == 0; icon: @image-url("assets/print.svg"); }
            Button { text: "Page 2"; clicked => { root.current-page = 1; } checked: root.current-page == 1; }
            Button { text: "Page 3"; clicked => { root.current-page = 2; } checked: root.current-page == 2;}
            
        }

        Rectangle { 
            PageOne { visible: root.current-page == 0;  }
        }
    }
    */
}