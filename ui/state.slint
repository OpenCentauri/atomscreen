// -- Temperatures --
export struct TemperatureSensor
{
    name: string,
    temperature: int,
}

export struct Heater 
{
    name: string,
    temperature: int,
    target: int,
    presets: [int]
}

export struct HeaterFan
{
    speed: float,
    heater: Heater,
}

export global TemperatureSensors 
{
    in-out property<[TemperatureSensor]> temperature_sensors;
    in-out property<[HeaterFan]> heater_fans;
    in-out property<Heater> extruder;
    in-out property<Heater> heated_bed;

    callback set_new_target_temperature(heater_name: string, target: int);
}

// -- Display Status --
export global DisplayStatus 
{
    in-out property<string> message;
    in-out property<float> progress; // 0 -> 1
}

export global PrinterAdministration
{
    callback emergency_stop();
    callback restart();
    callback firmware_restart();
}